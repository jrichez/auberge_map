{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7536633,"sourceType":"datasetVersion","datasetId":4388844}],"dockerImageVersionId":30646,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-02-02T06:21:12.605926Z","iopub.execute_input":"2024-02-02T06:21:12.606350Z","iopub.status.idle":"2024-02-02T06:21:12.617372Z","shell.execute_reply.started":"2024-02-02T06:21:12.606321Z","shell.execute_reply":"2024-02-02T06:21:12.616217Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"/kaggle/input/auberges-map/auberges_app.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import streamlit as st\nimport pandas as pd\nimport geopandas as gpd\nimport folium\nfrom folium import Marker\nfrom streamlit_folium import st_folium\nimport branca.colormap as cm","metadata":{"execution":{"iopub.status.busy":"2024-02-02T06:23:18.185565Z","iopub.execute_input":"2024-02-02T06:23:18.186002Z","iopub.status.idle":"2024-02-02T06:23:18.218971Z","shell.execute_reply.started":"2024-02-02T06:23:18.185969Z","shell.execute_reply":"2024-02-02T06:23:18.217246Z"},"trusted":true},"execution_count":13,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","Cell \u001b[0;32mIn[13], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mstreamlit\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mst\u001b[39;00m\n\u001b[1;32m      2\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mpandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mpd\u001b[39;00m\n\u001b[1;32m      3\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mgeopandas\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m \u001b[38;5;21;01mgpd\u001b[39;00m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'streamlit'"],"ename":"ModuleNotFoundError","evalue":"No module named 'streamlit'","output_type":"error"}]},{"cell_type":"code","source":"df_def = pd.read_csv('/kaggle/input/auberges-map/auberges_app.csv')","metadata":{"execution":{"iopub.status.busy":"2024-02-02T06:21:43.962801Z","iopub.execute_input":"2024-02-02T06:21:43.963221Z","iopub.status.idle":"2024-02-02T06:21:43.978418Z","shell.execute_reply.started":"2024-02-02T06:21:43.963190Z","shell.execute_reply":"2024-02-02T06:21:43.977385Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"linear = cm.LinearColormap([\"red\", \"orange\", \"yellow\", \"green\"], \n                           vmin=df_def['Score'].min(), \n                           vmax=df_def['Score'].max(),\n                           index=[0, 100, 350, 1000])","metadata":{"execution":{"iopub.status.busy":"2024-02-02T06:21:47.642290Z","iopub.execute_input":"2024-02-02T06:21:47.642685Z","iopub.status.idle":"2024-02-02T06:21:47.654360Z","shell.execute_reply.started":"2024-02-02T06:21:47.642654Z","shell.execute_reply":"2024-02-02T06:21:47.653209Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"m = folium.Map(location=[40.547722,-5.155226], tiles='openstreetmap', zoom_start=6)\nfor idx, row in df_def.iterrows():\n    folium.CircleMarker([row['Latitude'], \n            row['Longitude']], \n           popup=[str('Ville : ') + row['Ville'],\n                  str('Score : ') + str(row['Score']), \n                  str('Requetes : ') + str(row['Nombre de requetes mensuelles totales']),\n                  str('Nb Hotel : ') + str(row['Nombre etablissement booking'])],\n           radius=5,\n           fill=True,\n           fill_opacity=0.8,\n           color = linear(row.Score),).add_to(m)","metadata":{"execution":{"iopub.status.busy":"2024-02-02T06:21:48.058898Z","iopub.execute_input":"2024-02-02T06:21:48.059374Z","iopub.status.idle":"2024-02-02T06:21:48.158593Z","shell.execute_reply.started":"2024-02-02T06:21:48.059318Z","shell.execute_reply":"2024-02-02T06:21:48.157678Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"st_data = st_folium(m)","metadata":{"execution":{"iopub.status.busy":"2024-02-02T06:22:34.866413Z","iopub.execute_input":"2024-02-02T06:22:34.866874Z","iopub.status.idle":"2024-02-02T06:22:34.904423Z","shell.execute_reply.started":"2024-02-02T06:22:34.866823Z","shell.execute_reply":"2024-02-02T06:22:34.903136Z"},"trusted":true},"execution_count":12,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[12], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m st_data \u001b[38;5;241m=\u001b[39m \u001b[43mst_folium\u001b[49m(m)\n","\u001b[0;31mNameError\u001b[0m: name 'st_folium' is not defined"],"ename":"NameError","evalue":"name 'st_folium' is not defined","output_type":"error"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}